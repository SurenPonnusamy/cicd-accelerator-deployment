[{"C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\index.js":"1","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\App.js":"2","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\Home\\Home.js":"4","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\Login\\Login.js":"5","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\Settings\\Settings.js":"6","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\BuildServer\\BuildServer.js":"7","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\PipelineConfiguration\\PipelineConfiguration.js":"8","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\DeployServer\\DeployServer.js":"9","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\AccordionList.js":"10","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\Dashboard\\Dashboard.js":"11"},{"size":494,"mtime":1629741008497,"results":"12","hashOfConfig":"13"},{"size":1124,"mtime":1629741008434,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1629741008500,"results":"15","hashOfConfig":"13"},{"size":1373,"mtime":1642873155501,"results":"16","hashOfConfig":"13"},{"size":2666,"mtime":1642873155517,"results":"17","hashOfConfig":"13"},{"size":741,"mtime":1629741008495,"results":"18","hashOfConfig":"13"},{"size":4174,"mtime":1642873155486,"results":"19","hashOfConfig":"13"},{"size":17839,"mtime":1647247775264,"results":"20","hashOfConfig":"13"},{"size":5539,"mtime":1647432893301,"results":"21","hashOfConfig":"13"},{"size":6389,"mtime":1647432789123,"results":"22","hashOfConfig":"13"},{"size":4374,"mtime":1632506620414,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ove0ut",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\index.js",[],["50","51"],"C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\App.js",[],"C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\Home\\Home.js",[],"C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\Login\\Login.js",["52"],"import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport axios from 'axios'\r\n\r\nconst login = {\r\n\tbackground: \"white\",\r\n\tboxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n\twidth: \"-webkit-fill-available\",\r\n\tpadding: \"12px \t20px\",\r\n\tmargin: \"8px 0\",\r\n\tborder: \"1px solid #ccc\",\r\n\tborderRadius: \"4px\",\r\n    boxSizing: \"border-box\"\r\n}\r\n\r\nexport default class Login extends Component {\r\n\t\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: ''\r\n\t\t}\r\n\t}\r\n\t\r\n\tchangeHandler = (event) => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tusername: event.target.value,\r\n\t\t\t\tpassword: event.target.value\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tsessionStorage.clear()\r\n \t\taxios.get('http://localhost:3001/')\r\n\t\t.then(resp => {\r\n\t\t\tconsole.log(resp)\r\n\t\t\tif(resp.data === null || resp.data === undefined) {\r\n\t\t\t\talert('Backend service not available')\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\tsubmit = () => {\r\n\t\taxios.get('http://localhost:3001/api/checkUser', {\r\n\t\t\tparams: {\r\n\t\t\t\tusername: this.state.username,\r\n\t\t\t\tpassword: this.state.password\r\n\t\t\t}\r\n\t\t}).then(resp => {\r\n\t\t\tconsole.log(resp.data)\r\n\t\t\tif(resp.data == \"Authorized\") {\t\t\t\t\r\n\t\t\t\tthis.props.history.push('/home', {username: this.state.username})\r\n\t\t\t\tconsole.log(this.props.history.location.state.username)\r\n\t\t\t\tsessionStorage.setItem('name', this.props.history.location.state.username);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert('Username or password is incorrect')\t\t\t\t\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<Container>\r\n\t\t\t  <Row xl>\r\n\t\t\t\t<Col xl></Col>\r\n\t\t\t\t<Col xl>\r\n\t\t\t\t\t<div style={login}>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<center>\r\n\t\t\t\t\t\t\t\t<Form.Label>Sign In</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t\t<Form.Label>Enter username</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control type=\"input\" autoComplete=\"off\" placeholder=\"Enter username\" onChange={this.changeHandler}/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t<Form.Label>Enter password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"password\" autoComplete=\"off\" placeholder=\"Password\" onChange={this.changeHandler}/>\r\n\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t  </center>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<center>\r\n\t\t\t\t\t<ButtonGroup size=\"lg\" className=\"mb-3\">\r\n\t\t\t\t\t\t<Button onClick={this.submit} id=\"submitBtn\">Submit</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</center>\r\n\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xl></Col>\r\n\t\t\t  </Row>\r\n\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n}","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\Settings\\Settings.js",[],"C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\BuildServer\\BuildServer.js",["53"],"import { Component } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport AccordionList from '../../AccordionList'\r\nimport axios from 'axios'\r\n\r\nconst header = {\r\n\tbackgroundColor: \"wheat\",\r\n\theight: \"80px\",\r\n}\r\n\r\nconst form = {\r\n\tpadding: \"0px 10px\"\r\n}\r\n\r\nexport default class BuildServer extends Component {\t\r\n\t\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\t\r\n\t\tthis.state = {\t\t\t\r\n\t\t\tbuildServerURL: '',\r\n\t\t\tbuildServerUsername: '',\r\n\t\t\tbuildServerPassword: '',\r\n\t\t\tbuildServerName: ''\r\n        }\r\n\t\tthis.buildServerDetails = []\r\n\t\tthis.buildServerName = \"\"\r\n    }\t\t\r\n\t\r\n\tchangeHandler = (event) => {\r\n\t\tthis.setState(\r\n\t\t\t{ \r\n\t\t\t\tbuildServerURL: document.getElementById('formPlaintextURL').value,\t\t\t\t\r\n\t\t\t\tbuildServerUsername: document.getElementById('formBasicEmail').value,\t\t\r\n\t\t\t\tbuildServerPassword: document.getElementById('formBasicPassword').value,\t\t\r\n\t\t\t\tbuildServerName: document.getElementById('formBasicServerName').value\t\t\r\n\t\t\t}\r\n\t\t)\t\t\r\n\t}\r\n\t\r\n\tsubmit = (e) => {\t\t\r\n\t\t\r\n\t\tthis.buildServerDetails.push({\r\n\t\t\t\"buildServerURL\": this.state.buildServerURL,\r\n\t\t\t\"buildServerUsername\": this.state.buildServerUsername,\r\n\t\t\t\"buildServerPassword\": this.state.buildServerPassword,\r\n\t\t\t\"buildServerName\": this.state.buildServerName,\r\n\t\t})\r\n\t\t\r\n\t\tconst data = this.buildServerDetails\r\n\t\t\r\n\t\tconsole.log(data)\r\n  \t\taxios.get('http://localhost:3001/api/addBuildServer', {\r\n\t\t\tparams: {\r\n\t\t\t\tdata: data\r\n\t\t\t}\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res)\r\n\t\t})\r\n\t\t\r\n\t\tthis.buildServerDetails = []\r\n\t}\r\n\t\r\n\tcheckServerName = (e) => {\t\t\r\n\t\tthis.buildServerName = document.getElementById('formBasicServerName').value\r\n\t\tconsole.log(this.buildServerName)\t\t\r\n\t\t\r\n\t\tconst data = this.buildServerName\r\n\t\t\r\n\taxios.get('http://localhost:3001/api/checkServerName', {\r\n\t\tparams: {\r\n\t\t\tserverName: this.buildServerName\r\n\t\t}\r\n\t}).then(res => {\t\t\t\r\n\t\t\tif(res.data === \"Exist\") {\r\n\t\t\t\talert('Server Name '+this.buildServerName+' is already available in database.')\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert('Server Name '+this.buildServerName+' is not available in database.')\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper style={ header }>\r\n\t\t\t\t\t\t<center>\r\n\t\t\t\t\t\t\t<p style={{ padding: \"25px 0px\" }}><span id=\"buildServerHeading\" style={{ fontSize:\"25px\", fontWeight: \"500\" }}>CNAP Build Server</span></p>\r\n\t\t\t\t\t\t</center>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\t\t\t\t\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t<Grid item sm={3}>\r\n\t\t\t\t<AccordionList />\r\n\t\t\t</Grid>\t\r\n\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t<Form style={ form }>\r\n\t\t\t\t\t  <Form.Group as={Row} controlId=\"formBasicServerName\">\r\n\t\t\t\t\t\t<Form.Label column sm=\"3\">\r\n\t\t\t\t\t\t  Server Name\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t<Col sm=\"5\">\r\n\t\t\t\t\t\t  <Form.Control type=\"text\" placeholder=\"Enter server name\" onChange={this.changeHandler} onBlur={this.checkServerName}/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  <Form.Group as={Row} controlId=\"formPlaintextURL\">\r\n\t\t\t\t\t\t<Form.Label column sm=\"3\">\r\n\t\t\t\t\t\t  Build Server URL\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t<Col sm=\"5\">\r\n\t\t\t\t\t\t  <Form.Control type=\"text\" placeholder=\"Enter the build server url\" onChange={this.changeHandler}/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  <Form.Group as={Row} controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t<Form.Label column sm=\"3\">\r\n\t\t\t\t\t\t  Username\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t<Col sm=\"5\">\r\n\t\t\t\t\t\t  <Form.Control type=\"text\" placeholder=\"Enter jenkins username\" onChange={this.changeHandler}/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t  <Form.Group as={Row} controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t<Form.Label column sm=\"3\">\r\n\t\t\t\t\t\t  Password\r\n\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t<Col sm=\"5\">\r\n\t\t\t\t\t\t  <Form.Control type=\"password\" placeholder=\"Enter jenkins password\" onChange={this.changeHandler}/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  <Col lg=\"10\">\r\n\t\t\t\t\t\t<Button onClick={this.submit} > Submit </Button>\r\n\t\t\t\t\t  </Col>\r\n\t\t\t\t\t</Form>\r\n\t\t\t</Grid>\t\t\t\r\n\t\t\t</Grid>\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n}","C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\PipelineConfiguration\\PipelineConfiguration.js",[],"C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\DeployServer\\DeployServer.js",[],"C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\AccordionList.js",["54","55"],"C:\\Users\\surendhar.ponnusamy\\cicd-accelerator-deploy\\dev\\cicd-accelerator-deployment\\cicd-accelerator-frontend\\src\\components\\Dashboard\\Dashboard.js",["56","57","58"],"import { Component } from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport axios from 'axios'\r\n\r\nexport default class Dashboard extends Component {\r\n\t\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tisVisible: false,\r\n\t\t\tpipelineName: \"\",\r\n\t\t\tbuildNumber: \"\",\r\n\t\t\tusername: \"\",\r\n\t\t\tpipelines: [],\r\n\t\t\tpipelineLogs: \"\"\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tmodalDisplay = (e) => {\r\n\t\taxios.get('http://localhost:3001/api/getPipelineLogs/'+e.name)\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res.data)\r\n\t\t\t this.setState({\r\n\t\t\t\tpipelineLogs: res.data[0].log_data\r\n\t\t\t})\r\n\t\t\tthis.setState({\r\n\t\t\t\tbuildNumber: res.data[0].latestBuild\r\n\t\t\t})\t\t\t\r\n\t\t})\t\t\r\n\t\tthis.setState({\r\n\t\t\tisVisible: true\r\n\t\t})\r\n\t\tthis.setState({\r\n\t\t\tpipelineName: e.name\r\n\t\t})\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({\r\n\t\t\tisVisible: false\r\n\t\t})\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tpipelineLogs: \"\"\r\n\t\t})\r\n\t}\r\n\t\r\n\tcomponentDidMount(){\r\n\t\taxios.get('http://localhost:3001/api/getPipelines')\r\n\t\t.then(res => {\r\n\t\t\t//console.log(res.data)\r\n\t\t\t this.setState({\r\n\t\t\t\tpipelines: res.data\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\t\r\n\trender() {\r\n\t\t\r\n\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n \t\t\t\t<center>\r\n\t\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t  <Table aria-label=\"simple table\">\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t  <TableRow style={{ backgroundColor: \"LightGray\" }}>\r\n\t\t\t\t\t\t\t<TableCell>Name </TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"right\">Status</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"right\">Build Server</TableCell>\r\n\t\t\t\t\t\t  </TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t  {\r\n\t\t\t\t\t\t  \tthis.state.pipelines.map((pipline) => (pipline.isSuccess === \"inprogress\") ? (\r\n\t\t\t\t\t\t\t<TableRow key={pipline.name} style={{ backgroundColor: \"DodgerBlue\" }} onClick={() => this.modalDisplay(pipline)}>\r\n\t\t\t\t\t\t\t  <TableCell component=\"th\" scope=\"row\">\r\n\t\t\t\t\t\t\t\t{pipline.name}\r\n\t\t\t\t\t\t\t  </TableCell>\r\n\t\t\t\t\t\t\t  <TableCell align=\"right\">{pipline.isSuccess}</TableCell>\r\n\t\t\t\t\t\t\t  <TableCell align=\"right\">{pipline.buildServer}</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t  ) : (\"\"))\r\n\t\t\t\t\t\t  }\t\t\t\t\t\t\r\n\t\t\t\t\t\t  {\r\n\t\t\t\t\t\t\tthis.state.pipelines.map((pipline) => (pipline.isSuccess === \"succeeded\") ? (\r\n\t\t\t\t\t\t\t<TableRow key={pipline.name} style={{ backgroundColor: \"MediumSeaGreen\" }} onClick={() => this.modalDisplay(pipline)}>\r\n\t\t\t\t\t\t\t  <TableCell component=\"th\" scope=\"row\">\r\n\t\t\t\t\t\t\t\t{pipline.name}\r\n\t\t\t\t\t\t\t  </TableCell>\r\n\t\t\t\t\t\t\t  <TableCell align=\"right\">{pipline.isSuccess}</TableCell>\r\n\t\t\t\t\t\t\t  <TableCell align=\"right\">{pipline.buildServer}</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t  ) : (\"\"))}\r\n\t\t\t\t\t\t  {\r\n\t\t\t\t\t\t  \tthis.state.pipelines.map((pipline) => (pipline.isSuccess === \"failed\") ? (\r\n\t\t\t\t\t\t\t<TableRow key={pipline.name} style={{ backgroundColor: \"Tomato\" }} onClick={() => this.modalDisplay(pipline)}>\r\n\t\t\t\t\t\t\t  <TableCell component=\"th\" scope=\"row\">\r\n\t\t\t\t\t\t\t\t{pipline.name}\r\n\t\t\t\t\t\t\t  </TableCell>\r\n\t\t\t\t\t\t\t  <TableCell align=\"right\">{pipline.isSuccess}</TableCell>\r\n\t\t\t\t\t\t\t  <TableCell align=\"right\">{pipline.buildServer}</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t  ) : (\"\"))\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t  </Table>\r\n\t\t\t\t\t</TableContainer>\r\n\t\t\t\t</center>\r\n\t\t\t\t<div style={{ backgroundColor: \"white\" }}>\r\n\t\t\t\t  <Modal\r\n\t\t\t\t\tshow={this.state.isVisible}\r\n\t\t\t\t\tonHide={this.handleClose}\r\n\t\t\t\t\tbackdrop={true}\r\n\t\t\t\t\tkeyboard={true}\r\n\t\t\t\t\tfullscreen={true}\r\n\t\t\t\t\tsize='xl'\r\n\t\t\t\t  >\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t  <Modal.Title>#{ this.state.buildNumber } { this.state.pipelineName } details</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body id=\"modalBody\">\r\n\t\t\t\t\t\t<center>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{ this.state.pipelineLogs }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</center>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t  <Button variant=\"primary\" onClick={this.handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t  </Button>\t\t\t\t\t  \r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t  </Modal>\t\t\t\t\r\n\t\t\t\t</div> \r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n}",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":60,"column":17,"nodeType":"65","messageId":"66","endLine":60,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":73,"column":9,"nodeType":"69","messageId":"70","endLine":73,"endColumn":13},{"ruleId":"63","severity":1,"message":"64","line":119,"column":23,"nodeType":"65","messageId":"66","endLine":119,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":139,"column":28,"nodeType":"65","messageId":"66","endLine":139,"endColumn":30},{"ruleId":"67","severity":1,"message":"71","line":11,"column":8,"nodeType":"69","messageId":"70","endLine":11,"endColumn":15},{"ruleId":"67","severity":1,"message":"72","line":12,"column":8,"nodeType":"69","messageId":"70","endLine":12,"endColumn":12},{"ruleId":"67","severity":1,"message":"73","line":13,"column":8,"nodeType":"69","messageId":"70","endLine":13,"endColumn":17},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","no-global-assign","no-unsafe-negation"]